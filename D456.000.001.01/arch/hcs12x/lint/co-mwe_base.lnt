//    co-mwe_base.lnt
//    Compiler Options for Freescale MWE Compiler (Basis Option File)

//    This file contains options to allow PC-lint to process source
//    files for your compiler.  It is used as follows:
//
//    lint  co-mwe_base.lnt  source-file(s)
//

// asm
-d_asm=asm                      // Accepts both "_asm" and "asm"
-d__asm=asm                     // Accepts both "__asm" and "asm"
-dasm=_to_semi +rw(_to_semi)    // Accepts #define macroname {asm CMD;}
+pragma(asm,off)                // #asm blocks ignored
+pragma(endasm,on)              // #endasm restores things
-dasm=_to_brackets              // Ignore asm { ... }
+rw(_to_brackets)

// @ support
-ident1(@)
+rw(_to_brackets)
-d"@=_to_brackets "

// #warning support
//+ppw(warning)                 // Ignore #warning
-ppw_asgn(warning, error)       // Map #warning to an error

// special reserved words
+rw(__typeof__)
-dinterrupt=
-d__interrupt=
-dnear=
-d__near=
-dfar=
-d__far=

// macros
-emacro(64, NULL)                // Accepts ptrs to void/unvoid
-emacro(???, va_arg)             // The va_arg() macro can yield 415, 416, 661,
                                 // 662, 796 and 797 (out-of-bounds errors).

// While processing compiler (library) header files ...
-wlib(1)    // Sets the warning level within library headers to 1
            // (no warnings, just syntax errors).  Comment out if you
            // are actually linting library headers.  This
            // option makes obsolete options of the form -elib(axxx) where
            // xxx >= 400 which may be retained for historical reasons.
-elib(652)  // Suppress message about #define of earlier declared symbols
-elib(762)  // Suppress message about multiple identical declarations and
-elib(760)  // Suppress message about multiple identical macro defs
-elib(553)  // Undefined pre-processor variables are regarded as 0 without complaint

// We allow non-ints to be used for bitfields
-e46

//  The following functions exhibit variable return modes.
//  That is, they may equally-usefully be called for a value
//  as called just for their effects.  Accordingly we inhibit
//  Warning 534 for these functions.
//  Feel free to add to or subtract from this list.
-esym(534, memcpy, memmove, memset)                // mem functions
-esym(534, puts, scanf, sprintf, sscanf)           // String functions
-esym(534, strcat, strcpy, strncat, strncpy)       // String functions
-esym(534, printf)                                 // Others
